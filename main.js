!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,i){let{name:n,link:o}=t;e(this,"_handleLikeIcon",(e=>e.target.classList.toggle("element__title-button_active"))),e(this,"_handleDeleteIcon",(()=>this._listItem.remove())),e(this,"generateCard",(()=>(this._listItem=this._getTemplate(),this._title=this._listItem.querySelector(".element__title-name"),this._image=this._listItem.querySelector(".element__item"),this._title.textContent=this._name,this._image.src=this._link,this._image.alt="Landscape image from a place named ".concat(this._name),this._addEventListeners(),this._listItem))),this._name=n,this._link=o,this._templateCardSelector=s,this._handleCardClick=i}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".element").cloneNode(!0)}_addEventListeners(){this._likeButton=this._listItem.querySelector(".element__title-button"),this._deleteButton=this._listItem.querySelector(".element__delete-button"),this._likeButton.addEventListener("click",(e=>{this._handleLikeIcon(e)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteIcon()})),this._image.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var i=class{constructor(e,t){s(this,"_isFormValid",(()=>this._inputs.every((e=>!0===e.validity.valid)))),s(this,"_toggleButtonState",(()=>{const{inactiveButtonClass:e}=this._settings;this._isFormValid()?this._enableSubmitButton(this._button,e):this._disableSubmitButton(this._button,e)})),s(this,"_setEventListeners",(()=>{const{inputSelector:e,submitButtonSelector:t}=this._settings;this._inputs=[...this._form.querySelectorAll(e)],this._button=this._form.querySelector(t),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e,this._settings),this._toggleButtonState()}))}))})),this._settings=e,this._form=t}_showError(e){const{inputErrorClass:t,errorClass:s}=this._settings,i=e.validationMessage,n=this._form.querySelector("#".concat(e.id,"-error"));n.textContent=i,n.classList.add(s),e.classList.add(t)}_hideError(e){const{inputErrorClass:t,errorClass:s}=this._settings,i=this._form.querySelector("#".concat(e.id,"-error"));i.textContent="",i.classList.remove(s),e.classList.remove(t)}_checkValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!0,e.classList.add(t)}_enableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!1,e.classList.remove(t)}resetValidation(){this._inputs.forEach((e=>{this._hideError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class o{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),n(this,"_handleOverlayClose",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()})),this._popup=document.querySelector(e),this.close.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}setEventListeners(){this._popup.querySelector(".popup__close-icon").addEventListener("click",(()=>{this.close()}))}}class r extends o{constructor(e,t){super(e),this._submitHandler=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=[...this._form.querySelectorAll(".form__input")]}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}}var l=[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}];const a=document.querySelector(".popup_type_edit"),c=document.querySelector(".popup_type_add-card"),_=(document.querySelector(".elements__list"),a.querySelector(".popup__form")),u=c.querySelector(".popup__form"),d=document.querySelector(".form__input_type_name"),p=document.querySelector(".form__input_type_job"),h=document.querySelector(".profile__open-button"),m=document.querySelector(".profile__add-button"),b={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"};l.reverse();const f=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._element=this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:l,renderer:g},".elements__list");f.renderItems();const v=new class extends o{constructor(e){var t,s;super(e),s=(e,t)=>{super.open(),this._name=e,this._link=t,this._imageCardCaptionModal.textContent=this._name,this._imageCardModal.src=this._link,this._imageCardModal.alt="Landscape image from a place named ".concat(this._name)},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._imageCardModal=this._popup.querySelector(".popup__image"),this._imageCardCaptionModal=this._popup.querySelector(".popup__caption")}}(".popup_type_image");function y(e,t){v.open(e,t)}function g(e){let{name:s,link:i}=e;const n=function(e,s){return new t({name:e,link:s},".element__template",y).generateCard()}(s,i);f.addItem(n)}v.setEventListeners();const S=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{profileNameInput:t,profileJobInput:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({profileNameSelector:".profile__title-name",profileJobSelector:".profile__subtitle-job"}),L=new r(".popup_type_edit",(function(e){let{name:t,job:s}=e;S.setUserInfo({profileNameInput:t,profileJobInput:s}),L.close()}));L.setEventListeners();const C=new r(".popup_type_add-card",(function(e){let{name:t,link:s}=e;g({name:t,link:s}),C.close()}));C.setEventListeners();const E=new i(b,_),k=new i(b,u);E.enableValidation(),k.enableValidation(),h.addEventListener("click",(()=>{!function(){const{name:e,job:t}=S.getUserInfo();d.value=e,p.value=t}(),E.resetValidation(),L.open()})),m.addEventListener("click",(()=>{k.resetValidation(),C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,