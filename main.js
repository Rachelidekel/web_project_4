!function(){"use strict";class e{constructor(e,t,s){let{data:i,handleCardClick:r,handleLikeIcon:n,handleDeleteIcon:o}=e;var a,l;l=()=>(this._listItem=this._getTemplate(),this._title=this._listItem.querySelector(".element__title-name"),this._image=this._listItem.querySelector(".element__item"),this._likesCount=this._listItem.querySelector(".element__likes-count"),this._likesCount.textContent=this._likes.length,this._title.textContent=this._name,this._image.src=this._link,this._image.alt="Landscape image from a place named ".concat(this._name),this._addEventListeners(),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this.isLiked()&&this.likeCard(this._likes),this._listItem),(a="generateCard")in this?Object.defineProperty(this,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):this[a]=l,this._name=i.name,this._link=i.link,this._likes=i.likes,this._templateCardSelector=t,this._handleCardClick=r,this._handleDeleteIcon=o,this._handleLikeIcon=n,this._id=i._id,this._userId=s,this._ownerId=i.owner._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".element").cloneNode(!0)}isLiked(){return this._likes.some((e=>e._id===this._userId))}removeCard(){this._listItem.remove(),this._listItem=null}likeCard(e){this._likes=e,this._likesCount.textContent=this._likes.length,this._listItem.querySelector(".element__title-button").classList.toggle("element__title-button_active")}_addEventListeners(){this._likeButton=this._listItem.querySelector(".element__title-button"),this._deleteButton=this._listItem.querySelector(".element__delete-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon(this._id)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteIcon(this._id)})),this._image.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var s=class{constructor(e,s){t(this,"_isFormValid",(()=>this._inputs.every((e=>!0===e.validity.valid)))),t(this,"_toggleButtonState",(()=>{const{inactiveButtonClass:e}=this._settings;this._isFormValid()?this._enableSubmitButton(this._button,e):this._disableSubmitButton(this._button,e)})),t(this,"_setEventListeners",(()=>{const{inputSelector:e,submitButtonSelector:t}=this._settings;this._inputs=[...this._form.querySelectorAll(e)],this._button=this._form.querySelector(t),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e,this._settings),this._toggleButtonState()}))}))})),this._settings=e,this._form=s}_showError(e){const{inputErrorClass:t,errorClass:s}=this._settings,i=e.validationMessage,r=this._form.querySelector("#".concat(e.id,"-error"));r.textContent=i,r.classList.add(s),e.classList.add(t)}_hideError(e){const{inputErrorClass:t,errorClass:s}=this._settings,i=this._form.querySelector("#".concat(e.id,"-error"));i.textContent="",i.classList.remove(s),e.classList.remove(t)}_checkValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!0,e.classList.add(t)}_enableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!1,e.classList.remove(t)}resetValidation(){this._inputs.forEach((e=>{this._hideError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){i(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),i(this,"_handleOverlayClose",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()})),this._popup=document.querySelector(e),this.close.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}setEventListeners(){this._popup.querySelector(".popup__close-icon").addEventListener("click",(()=>{this.close()}))}}class n extends r{constructor(e,t){super(e),this._submitHandler=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=[...this._form.querySelectorAll(".form__input")],this._submitButton=this._form.querySelector(".form__button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues())}))}close(){super.close(),this._form.reset()}}class o{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._element=this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const a=new class{constructor(e){let{baseUrl:t,headers:s}=e;var i,r;r=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))),(i="_customFetch")in this?Object.defineProperty(this,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[i]=r,this._baseUrl=t,this._headers=s}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}setUserInfo(e,t){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t})})}createCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}dislikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}setUserAvatar(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around.nomoreparties.co/v1/group-1",headers:{authorization:"a0dd5829-1b51-4f9b-93c7-6d4f8e85cb31","Content-Type":"application/json"}}),l=document.querySelector(".popup_type_edit"),c=document.querySelector(".popup_type_add-card"),_=document.querySelector(".popup_type_avatar"),h=l.querySelector(".popup__form"),d=c.querySelector(".popup__form"),u=_.querySelector(".popup__form"),p=document.querySelector(".form__input_type_name"),m=document.querySelector(".form__input_type_job"),b=document.querySelector(".profile__open-button"),f=document.querySelector(".profile__add-button"),v=document.querySelector(".profile__avatar-overlay"),g=document.querySelector(".profile__image"),y=document.querySelector(".profile__avatar"),C={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"};let S,L;const k=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:i}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{profileNameInput:t,profileJobInput:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}setUserAvatar(e){let{avatarImageInput:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__title-name",profileJobSelector:".profile__subtitle-job",avatarSelector:".profile__image"});g.alt="user profile avatar",g.classList.add("profile__image"),Promise.all([a.getInitialCards(),a.getUserInfo()]).then((e=>{let[t,s]=e;L=new o({items:t,renderer:e=>L.addItem(q(e))},".elements__list"),S=s._id,L.renderItems(),k.setUserInfo({profileNameInput:s.name,profileJobInput:s.about}),y.prepend(g),k.setUserAvatar({avatarImageInput:s.avatar})})).catch(console.log);const I=new class extends r{constructor(e){var t,s;super(e),s=e=>{super.open(),this._name=e.name,this._link=e.link,this._imageCardCaptionModal.textContent=this._name,this._imageCardModal.src=this._link,this._imageCardModal.alt="Landscape image from a place named ".concat(this._name)},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._imageCardModal=this._popup.querySelector(".popup__image"),this._imageCardCaptionModal=this._popup.querySelector(".popup__caption")}}(".popup_type_image");I.setEventListeners();const E=new class extends r{setAction(e){this._submitHandler=e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}(".popup_type_delete-card");function q(t){const s=new e({data:t,handleCardClick:()=>{I.open(t)},handleLikeIcon:e=>{s.isLiked()?a.dislikeCard(e).then((e=>{s.likeCard(e.likes)})).catch(console.log):a.likeCard(e).then((e=>{s.likeCard(e.likes)})).catch(console.log)},handleDeleteIcon:e=>{E.open(),E.setAction((()=>{a.deleteCard(e).then((e=>{s.removeCard(),E.close()})).catch(console.log)}))}},".element__template",S);return s.generateCard()}E.setEventListeners();const w=new n(".popup_type_edit",(function(e){w.renderLoading(!0),a.setUserInfo(e.name,e.job).then((e=>{k.setUserInfo({profileNameInput:e.name,profileJobInput:e.about}),w.close()})).catch(console.log).finally((()=>w.renderLoading(!1)))}));w.setEventListeners();const U=new n(".popup_type_add-card",(function(e){U.renderLoading(!0),a.createCard(e).then((e=>{q(e),L.addItem(q(e)),U.close()})).catch(console.log).finally((()=>U.renderLoading(!1)))}));U.setEventListeners();const B=new n(".popup_type_avatar",(function(e){B.renderLoading(!0),a.setUserAvatar(e.link).then((e=>{k.setUserAvatar({avatarImageInput:e.avatar}),B.close()})).catch(console.log).finally((()=>B.renderLoading(!1)))}));B.setEventListeners();const x=new s(C,h),V=new s(C,d),j=new s(C,u);x.enableValidation(),V.enableValidation(),j.enableValidation(),b.addEventListener("click",(()=>{!function(){const{name:e,job:t}=k.getUserInfo();p.value=e,m.value=t}(),x.resetValidation(),w.open()})),f.addEventListener("click",(()=>{V.resetValidation(),U.open()})),v.addEventListener("click",(()=>{j.resetValidation(),B.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,