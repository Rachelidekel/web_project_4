!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,n){let{name:i,link:o}=t;e(this,"_handleLikeIcon",(e=>e.target.classList.toggle("element__title-button_active"))),e(this,"_handleDeleteIcon",(()=>this._listItem.remove())),e(this,"generateCard",(()=>(this._listItem=this._getTemplate(),this._title=this._listItem.querySelector(".element__title-name"),this._image=this._listItem.querySelector(".element__item"),this._title.textContent=this._name,this._image.src=this._link,this._image.alt="Landscape image from a place named ".concat(this._name),this._addEventListeners(),this._listItem))),this._name=i,this._link=o,this._templateCardSelector=s,this._handleCardClick=n}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".element").cloneNode(!0)}_addEventListeners(){this._likeButton=this._listItem.querySelector(".element__title-button"),this._deleteButton=this._listItem.querySelector(".element__delete-button"),this._likeButton.addEventListener("click",(e=>{this._handleLikeIcon(e)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteIcon()})),this._image.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var n=class{constructor(e,t){s(this,"_isFormValid",(()=>this._inputs.every((e=>!0===e.validity.valid)))),s(this,"_toggleButtonState",(()=>{const{inactiveButtonClass:e}=this._settings;this._isFormValid()?this._enableSubmitButton(this._button,e):this._disableSubmitButton(this._button,e)})),s(this,"_setEventListeners",(()=>{const{inputSelector:e,submitButtonSelector:t}=this._settings;this._inputs=[...this._form.querySelectorAll(e)],this._button=this._form.querySelector(t),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e,this._settings),this._toggleButtonState()}))}))})),this._settings=e,this._form=t}_showError(e){const{inputErrorClass:t,errorClass:s}=this._settings,n=e.validationMessage,i=this._form.querySelector("#".concat(e.id,"-error"));i.textContent=n,i.classList.add(s),e.classList.add(t)}_hideError(e){const{inputErrorClass:t,errorClass:s}=this._settings,n=this._form.querySelector("#".concat(e.id,"-error"));n.textContent="",n.classList.remove(s),e.classList.remove(t)}_checkValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!0,e.classList.add(t)}_enableSubmitButton(e){const{inactiveButtonClass:t}=this._settings;e.disabled=!1,e.classList.remove(t)}resetValidation(){this._inputs.forEach((e=>{this._hideError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class o{constructor(e){i(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),i(this,"_handleOverlayClose",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()})),this._popup=document.querySelector(e),this.close.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}setEventListeners(){this._popup.querySelector(".popup__close-icon").addEventListener("click",(()=>{this.close()}))}}class r extends o{constructor(e,t){super(e),this._submitHandler=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return this._inputs=[...this._form.querySelectorAll(".form__input")],this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}}const l=document.querySelector(".popup_type_edit"),a=document.querySelector(".popup_type_add-card"),c=document.querySelector(".elements__list"),_=l.querySelector(".popup__form"),u=a.querySelector(".popup__form"),p=document.querySelector(".form__input_type_name"),d=document.querySelector(".form__input_type_job"),h=document.querySelector(".profile__open-button"),m=document.querySelector(".profile__add-button"),b={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"},f=[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}];f.reverse();const y=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._element=this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:f,renderer:S},".element__template");y.renderItems();const v=new class extends o{constructor(e){var t,s;super(e),s=(e,t)=>{super.open(),this._name=e,this._link=t;const s=this._popup.querySelector(".popup__image");this._popup.querySelector(".popup__caption").textContent=this._name,s.src=this._link,s.alt="Landscape image from a place named ".concat(this._name)},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s}}(".popup_type_image");function g(e,t){v.open(e,t)}function S(e,s){let{name:n,link:i}=e;const o=new t({name:n,link:i},".element__template",g);c.prepend(o.generateCard(s))}v.setEventListeners();const L=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{profileNameInput:t,profileJobInput:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({profileNameSelector:".profile__title-name",profileJobSelector:".profile__subtitle-job"}),E=new r(".popup_type_edit",(function(e){let{name:t,job:s}=e;L.setUserInfo({profileNameInput:t,profileJobInput:s}),E.close()}));E.setEventListeners();const k=new r(".popup_type_add-card",(function(e){let{name:t,link:s}=e;const n=S({name:t,link:s});y.addItem(n),k.close()}));k.setEventListeners();const C=new n(b,_),q=new n(b,u);C.enableValidation(),q.enableValidation(),h.addEventListener("click",(()=>{!function(){const e=L.getUserInfo(),t=L.getUserInfo();p.value=e.name,d.value=t.job}(),C.resetValidation(),E.open()})),m.addEventListener("click",(()=>{q.resetValidation(),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,